version: '3.4'

services:
  client:
    container_name: client
    build:
      context: ./client/
      dockerfile: development.Dockerfile
    ports:
      - 8080:80
    restart: on-failure
    volumes:
      - ./client:/app:rw
      - client-node-modules:/app/node_modules:rw

  server:
    container_name: server
    command: "sh -c 'npm install && npm run dev'"
    build:
      context: ./server/
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    restart: on-failure
    environment:
      MYSQL_HOST: ${MYSQL_HOST:-mysql}
      MYSQL_PORT: ${MYSQL_PORT:-3306}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASS: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      API_PORT: ${API_PORT:-9000}
      VERSION: ${VERSION}
    volumes:
      - ./server:/app:rw
      - server-node-modules:/app/node_modules:rw

  mysql:
    container_name: mysql
    image: mysql:8.0
    command: [
      "--default-authentication-plugin=mysql_native_password",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci"
    ]
    ports:
      - 3806:3306
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql-volume:/var/lib/mysql:rw
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql:rw

volumes:
  client-node-modules:
  mysql-volume:
  server-node-modules:
